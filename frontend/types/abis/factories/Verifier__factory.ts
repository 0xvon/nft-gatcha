/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "pi_a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "X",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "Y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "pi_b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "pi_c",
            type: "tuple",
          },
        ],
        internalType: "struct Verifier.Proof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "input",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611afc806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806388b225b614610030575b600080fd5b61004a600480360381019061004591906115e9565b610060565b6040516100579190611662565b60405180910390f35b600061006a611149565b604051806040016040528085600001516000015181526020018560000151602001518152508160000181905250604051806040016040528060405180604001604052808760200151600001516001600281106100c9576100c861167d565b5b602002015181526020018760200151600001516000600281106100ef576100ee61167d565b5b6020020151815250815260200160405180604001604052808760200151602001516001600281106101235761012261167d565b5b602002015181526020018760200151602001516000600281106101495761014861167d565b5b602002015181525081525081602001819052506040518060400160405280856040015160000151815260200185604001516020015181525081604001819052506000835167ffffffffffffffff8111156101a6576101a56112b5565b5b6040519080825280602002602001820160405280156101d45781602001602082028036833780820191505090505b50905060005b8451811015610230578481815181106101f6576101f561167d565b5b60200260200101518282815181106102115761021061167d565b5b6020026020010181815250508080610228906116db565b9150506101da565b50600061023d828461025a565b0361024d57600192505050610254565b6000925050505b92915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050600061028a61044d565b9050806080015151600186516102a09190611723565b146102e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d7906117b4565b60405180910390fd5b60006040518060400160405280600081526020016000815250905060005b86518110156103cf578387828151811061031b5761031a61167d565b5b602002602001015110610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a90611820565b60405180910390fd5b6103ba826103b5856080015160018561037c9190611723565b8151811061038d5761038c61167d565b5b60200260200101518a85815181106103a8576103a761167d565b5b602002602001015161093f565b610a17565b915080806103c7906116db565b9150506102fe565b506103f98183608001516000815181106103ec576103eb61167d565b5b6020026020010151610a17565b905061042f61040b8660000151610b15565b8660200151846000015185602001518587604001518b604001518960600151610bba565b61043f5760019350505050610447565b600093505050505b92915050565b61045561117c565b60405180604001604052807f2ea82efafa700aa9672b7b023e0f848dd618894e27d8869aaf9aaf0e93f4f10c81526020017f0c4f8bd1d6aa572e2413de9663fe409c25b4b11bffdacf3f0baecaf208376f8e8152508160000181905250604051806040016040528060405180604001604052807f047e2bcb37e950f0efee4a7a2ac75ac659d6cc744a1f3708cbbc60e08545fbf381526020017f205211fab6fa22a84441fd32ef55dc5bc8f065da222bcdffc5e60bc4885adbe3815250815260200160405180604001604052807f22e9cf9b4d2033368981bf1c65f0cb30b2009c33971f892961a94a5688a9abf581526020017eb2661d5639b822e69fa8677921e843a01d771ab277621118cd8a8e06b697a88152508152508160200181905250604051806040016040528060405180604001604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160405180604001604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8152508152508160400181905250604051806040016040528060405180604001604052807f0ba1d787ed594e056e80ab2a3e814454028b37eda2ac75cbb0df71243b5af9bd81526020017f0e0ce808bf264f5c0ff3831cb1b69756ff828a59fdd432e9a636cd396b687aee815250815260200160405180604001604052807f0aad48bb5e5bf94fdfa09cd2807dac6509cdfffb78444afec8bce5f1aca3db4481526020017f13ad43b5930aa23fc498cbf4c380b3892ff5c84d1e0614607f7ab4eea7b27f458152508152508160600181905250600467ffffffffffffffff81111561071b5761071a6112b5565b5b60405190808252806020026020018201604052801561075457816020015b6107416111c3565b8152602001906001900390816107395790505b50816080018190525060405180604001604052807f073af5d88927592b0c33f01066c5b769cc18a3eab2cede766e154f26a1f9af9381526020017f282f57d4ac612f45de38ff32be281acb638b943a5396f3dfbaad39d3db6085a381525081608001516000815181106107ca576107c961167d565b5b602002602001018190525060405180604001604052807f0b1796f5491e08bc393ef3743c6ab858f636556dc2bfcc43757f3bffddd4b1ec81526020017f1e4bb3783f7383c311c5acb0e3b1358ba2224e7e38ac245998924ca86321532d81525081608001516001815181106108425761084161167d565b5b602002602001018190525060405180604001604052807f03ed0b0aec4ac4c2e72a049faa7915afccf13dfe1a6f04ef21dab0ae4805b83581526020017e917b86015f1dc3ad95afe9b190fb227db94f0839607c4b96fad591d7e3b29281525081608001516002815181106108b9576108b861167d565b5b602002602001018190525060405180604001604052807f0a26e2c50c61ca589bdff79672edc5702bce2cbbef3baa272477eaa80ccd9af181526020017f0ca499b1647ea43b0c7b7b04306625c122c63852e68866dda653e66d8c1a14e381525081608001516003815181106109315761093061167d565b5b602002602001018190525090565b6109476111c3565b61094f6111dd565b8360000151816000600381106109685761096761167d565b5b60200201818152505083602001518160016003811061098a5761098961167d565b5b60200201818152505082816002600381106109a8576109a761167d565b5b602002018181525050600060608360808460076107d05a03fa905080600081036109ce57fe5b5080610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a069061188c565b60405180910390fd5b505092915050565b610a1f6111c3565b610a276111ff565b836000015181600060048110610a4057610a3f61167d565b5b602002018181525050836020015181600160048110610a6257610a6161167d565b5b602002018181525050826000015181600260048110610a8457610a8361167d565b5b602002018181525050826020015181600360048110610aa657610aa561167d565b5b602002018181525050600060608360c08460066107d05a03fa90508060008103610acc57fe5b5080610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b04906118f8565b60405180910390fd5b505092915050565b610b1d6111c3565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610b5a575060008360200151145b15610b7e576040518060400160405280600081526020016000815250915050610bb5565b604051806040016040528084600001518152602001828560200151610ba39190611947565b83610bae9190611978565b8152509150505b919050565b600080600467ffffffffffffffff811115610bd857610bd76112b5565b5b604051908082528060200260200182016040528015610c1157816020015b610bfe6111c3565b815260200190600190039081610bf65790505b5090506000600467ffffffffffffffff811115610c3157610c306112b5565b5b604051908082528060200260200182016040528015610c6a57816020015b610c57611221565b815260200190600190039081610c4f5790505b5090508a82600081518110610c8257610c8161167d565b5b60200260200101819052508882600181518110610ca257610ca161167d565b5b60200260200101819052508682600281518110610cc257610cc161167d565b5b60200260200101819052508482600381518110610ce257610ce161167d565b5b60200260200101819052508981600081518110610d0257610d0161167d565b5b60200260200101819052508781600181518110610d2257610d2161167d565b5b60200260200101819052508581600281518110610d4257610d4161167d565b5b60200260200101819052508381600381518110610d6257610d6161167d565b5b6020026020010181905250610d778282610d87565b9250505098975050505050505050565b60008151835114610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc4906119f8565b60405180910390fd5b6000835190506000600682610de29190611a18565b905060008167ffffffffffffffff811115610e0057610dff6112b5565b5b604051908082528060200260200182016040528015610e2e5781602001602082028036833780820191505090505b50905060005b838110156110b357868181518110610e4f57610e4e61167d565b5b602002602001015160000151826000600684610e6b9190611a18565b610e759190611723565b81518110610e8657610e8561167d565b5b602002602001018181525050868181518110610ea557610ea461167d565b5b602002602001015160200151826001600684610ec19190611a18565b610ecb9190611723565b81518110610edc57610edb61167d565b5b602002602001018181525050858181518110610efb57610efa61167d565b5b602002602001015160000151600060028110610f1a57610f1961167d565b5b6020020151826002600684610f2f9190611a18565b610f399190611723565b81518110610f4a57610f4961167d565b5b602002602001018181525050858181518110610f6957610f6861167d565b5b602002602001015160000151600160028110610f8857610f8761167d565b5b6020020151826003600684610f9d9190611a18565b610fa79190611723565b81518110610fb857610fb761167d565b5b602002602001018181525050858181518110610fd757610fd661167d565b5b602002602001015160200151600060028110610ff657610ff561167d565b5b602002015182600460068461100b9190611a18565b6110159190611723565b815181106110265761102561167d565b5b6020026020010181815250508581815181106110455761104461167d565b5b6020026020010151602001516001600281106110645761106361167d565b5b60200201518260056006846110799190611a18565b6110839190611723565b815181106110945761109361167d565b5b60200260200101818152505080806110ab906116db565b915050610e34565b506110bc611247565b6000602082602086026020860160086107d05a03fa905080600081036110de57fe5b508061111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690611aa6565b60405180910390fd5b6000826000600181106111355761113461167d565b5b602002015114159550505050505092915050565b604051806060016040528061115c6111c3565b8152602001611169611221565b81526020016111766111c3565b81525090565b6040518060a0016040528061118f6111c3565b815260200161119c611221565b81526020016111a9611221565b81526020016111b6611221565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060400160405280611234611269565b8152602001611241611269565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112ed826112a4565b810181811067ffffffffffffffff8211171561130c5761130b6112b5565b5b80604052505050565b600061131f61128b565b905061132b82826112e4565b919050565b6000819050919050565b61134381611330565b811461134e57600080fd5b50565b6000813590506113608161133a565b92915050565b60006040828403121561137c5761137b61129f565b5b6113866040611315565b9050600061139684828501611351565b60008301525060206113aa84828501611351565b60208301525092915050565b600080fd5b600067ffffffffffffffff8211156113d6576113d56112b5565b5b602082029050919050565b600080fd5b60006113f96113f4846113bb565b611315565b90508060208402830185811115611413576114126113e1565b5b835b8181101561143c57806114288882611351565b845260208401935050602081019050611415565b5050509392505050565b600082601f83011261145b5761145a6113b6565b5b60026114688482856113e6565b91505092915050565b6000608082840312156114875761148661129f565b5b6114916040611315565b905060006114a184828501611446565b60008301525060406114b584828501611446565b60208301525092915050565b600061010082840312156114d8576114d761129f565b5b6114e26060611315565b905060006114f284828501611366565b600083015250604061150684828501611471565b60208301525060c061151a84828501611366565b60408301525092915050565b600067ffffffffffffffff821115611541576115406112b5565b5b602082029050602081019050919050565b600061156561156084611526565b611315565b90508083825260208201905060208402830185811115611588576115876113e1565b5b835b818110156115b1578061159d8882611351565b84526020840193505060208101905061158a565b5050509392505050565b600082601f8301126115d0576115cf6113b6565b5b81356115e0848260208601611552565b91505092915050565b600080610120838503121561160157611600611295565b5b600061160f858286016114c1565b92505061010083013567ffffffffffffffff8111156116315761163061129a565b5b61163d858286016115bb565b9150509250929050565b60008115159050919050565b61165c81611647565b82525050565b60006020820190506116776000830184611653565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116e682611330565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611718576117176116ac565b5b600182019050919050565b600061172e82611330565b915061173983611330565b9250828201905080821115611751576117506116ac565b5b92915050565b600082825260208201905092915050565b7f76657269666965722d6261642d696e7075740000000000000000000000000000600082015250565b600061179e601283611757565b91506117a982611768565b602082019050919050565b600060208201905081810360008301526117cd81611791565b9050919050565b7f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c6400600082015250565b600061180a601f83611757565b9150611815826117d4565b602082019050919050565b60006020820190508181036000830152611839816117fd565b9050919050565b7f70616972696e672d6d756c2d6661696c65640000000000000000000000000000600082015250565b6000611876601283611757565b915061188182611840565b602082019050919050565b600060208201905081810360008301526118a581611869565b9050919050565b7f70616972696e672d6164642d6661696c65640000000000000000000000000000600082015250565b60006118e2601283611757565b91506118ed826118ac565b602082019050919050565b60006020820190508181036000830152611911816118d5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195282611330565b915061195d83611330565b92508261196d5761196c611918565b5b828206905092915050565b600061198382611330565b915061198e83611330565b92508282039050818111156119a6576119a56116ac565b5b92915050565b7f70616972696e672d6c656e677468732d6661696c656400000000000000000000600082015250565b60006119e2601683611757565b91506119ed826119ac565b602082019050919050565b60006020820190508181036000830152611a11816119d5565b9050919050565b6000611a2382611330565b9150611a2e83611330565b9250828202611a3c81611330565b91508282048414831517611a5357611a526116ac565b5b5092915050565b7f70616972696e672d6f70636f64652d6661696c65640000000000000000000000600082015250565b6000611a90601583611757565b9150611a9b82611a5a565b602082019050919050565b60006020820190508181036000830152611abf81611a83565b905091905056fea264697066735822122027b3a9c01567ebb63ee6cfe03624f44e7f09b478ce467068fb344f661ed44e6364736f6c63430008120033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
